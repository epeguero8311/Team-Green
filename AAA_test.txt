***Even AAA Tests***

Task 2
Feature:Calculate stats for age
Test 1
Arrange: I created a dataset of ages
Act: Calculate.getStatistics() method is used to calculate for needed outcomes
Assert: Checking to make sure the stats match expected outcome
---------
Feature: Calculate stats for bmi
Test 2
Arrange: I created a dataset of bmis
Act: Calculate.getStatistics() method is used to calculate for needed outcomes
Assert: Checking to make sure the stats match expected outcome 

Task 4
Feature: Vertical BMI Histogram
Test 1
Arrange: Make a dataset of insurance records that have bmi values for smokers and nonsmokers 
Act: Program calls method to generate vertical text based histograms
Assert: The console will display labeled vertical histograms that accurately represent the data
-----------
Task 6
Feature: Smoker vs Nonsmoker Histogram 
Test 1
Arrange: Nake a dataset of insurance records that include smokers and nonsmokers
Act: The program calls displaySmokerHistogram(nonSmokerCount, smokerCount) using the counts from countSmokers(records)
Assert: The console will display labeled vertical histograms that accurately represent the data

Task 8
Feature: Age Group Comparison 
Test 1
Arrange: Make a dataset of insurance records includes ages and charges for people both under 20 and over 50
Act: The program runs a method to calculate the average charges of each group and compare them
Assert: The console prints the average charges for both groups

Test 2 
Arrange: Make a dataset where seniors 50+ have charges that average 6000 and people 30 or younger that have charges that average 3000
Act: The program calls the compareAgeGroupCharges(store) function on the dataset
Assert: The console prints the counts and averages of both groups along with the ratio
-----------
Task 10
Feature:Charges vs Number of Children
Test 1
Arrange: Make a dataset with number of children and total charges
Act: Find the average charge per child for each family size
Assert: The output shows if more children mean lower charge per child

Task 12
Feature: Southern Smoker Charges
Test 1
Arrange: Make a dataset with region, smoker status, and charges
Act: Compare average charges of southern smokers to smokers in other regions
Assert: The output shows if southern smokers pay at least 25% more
-----------
Task 14
Feature: Age Distribution for Smokers
Test 1
Arrange:
Act: Make a histogram showing the age distribution of smokers
Assert: The console shows the correct age bins and labels

Task 16
Feature: Average Age of Smokers
Test 1
Arrange: Make a dataset with smoker status and age
Act: Find average age of smokers and non-smokers
Assert: The output shows if smokers are younger on average
-----------
Task 18
Feature: Southern BMI Comparison
Test 1
Arrange: Make a dataset with region and BMI data
Act: Compare average BMI in southern and northern regions
Assert: The output shows if southerners have higher BMI, with both averages

Task 20
Feature: Linear Regression of Charges vs BMI
Test 1
Arrange: Make a dataset with BMI and charges.
Act: Calculate correlation and regression between charges and BMI, then predict 11 new BMI values.
Assert: The output shows the correlation, formula, and all predicted charges.
-----------
Task 22
Feature: Linear Regression of Charges vs Region
Test 1
Arrange: Make a dataset with region and charges.
Act: Convert regions to numbers, find correlation and regression, then predict 33 new points.
Assert: The output shows the correlation, equation, and all predicted charges clearly.

======================================================================================================

***Odd AAA Tests***

Task 1
Feature: Store the first N records of the dataset in a custom object
Test 1
Arrange: I created a small dataset of InsuranceRecord objects and added them into StoreRecords. I set N = 3.
Act: I called get_first_n_records(3) to retrieve the first 3 records.
Assert: I checked that the returned list contains exactly 3 records and that they match the first 3 records from the dataset in the correct order.
---------
Task 3
Feature: Print histogram of ages from dataset
Test 1
Arrange: A dataset of InsuranceRecord objects was created with repeated ages
Act: An AgeHistogram object was created with this dataset and the print_histogram() method was called.
Assert: The printed histogram displayed one line per unique age, in sorted order, with the correct number of * matching the count of each age.

Task 5
Feature: Print histogram of children counts from dataset
Test 1
Arrange: A dataset of InsuranceRecord objects was created with varying numbers of children.
Act: A ChildrenCount object was created with this dataset and the print_children_count() method was called.
Assert: The printed output displayed one line per unique children count, in sorted order, with the correct number of * and the total in parentheses.
---------
Task 7
Feature: Check fairness of dataset by region distribution
Test 1
Arrange: A dataset of InsuranceRecord objects was created with regions assigned.
Act: A Task7 object was created with this dataset and the is_data_fair() and print_fairness() methods were called.
Assert: The fairness result correctly indicated whether the dataset was balanced across regions within the allowed threshold.


Test 2
Arrange:A dataset of InsuranceRecord objects was created with unbalanced region assignments
Act:A Task7 object was created with this dataset and the print_fairness() method was called
Assert: The program printed "This data is not fair"

Task 9
Feature: Check charge ranges across BMI groups
Test 1
Arrange: A dataset of InsuranceRecord objects was created with varying BMI values and charges.
Act: A Task9 object was created with this dataset and the check_bmi_ranges() method was called.
Assert: The output correctly displayed the charge ranges for each BMI group and identified whether the 30â€“45 BMI group had the largest range.

Test 2 
Arrange:A dataset of InsuranceRecord objects was created wuth charges sharply increasing in the 30<45 bmi range
Act:A Task9 object was created with this dataset and the check_bmi_ranges() method was called
Assert:The program prints "The range of charges in BMI 30-45 is greater than the other 2 ranges
---------
Task 11
Feature: Check hypothesis that smokers have higher charges than non-smokers
Test 1
Arrange: A dataset of InsuranceRecord objects was created containing both smokers and non-smokers with associated charges.
Act: A Task11 object was created with this dataset and the check_smoker_hypothesis() method was called.
Assert: The output correctly displayed the average and range of charges for both groups and determined whether the hypothesis was supported.

Test 2
Arrange:A dataset of InsuranceRecord objects was created where non-smokers have consistently higher charges than smokers
Act:A Task11 object was created with this dataset and the check_smoker_hypothesis() method was called.
Assert:The program prints "The hypothesis is not supported"

Task 13
Feature: Check hypothesis that smokers have a lower average BMI than non-smokers
Test 1
Arrange: A dataset of InsuranceRecord objects was created containing both smokers and non-smokers with BMI values.
Act: A Task13 object was created with this dataset and the check_smoker_bmi() method was called.
Assert: The output correctly displayed the average BMI for both groups and determined whether the hypothesis was supported

Test 2
Arrange:A dataset of InsuranceRecord objects was created where smokers have higher BMI values than no smokers, which goes against the hypothesis.
Act:A Task13 object was created with this dateset and the check_smoker_bmi() method was called.
Assert:The program prints"No: Smokers do not have an average lower BMI than non-smokers"

---------
Task 15
Feature: Sort regions by average insurance charges
Test 1
Arrange: A dataset of InsuranceRecord objects was created with associated regions and charges.
Act: A Task15 object was created with this dataset and the sort_regions_by_avg_charges() method was called.
Assert: The output correctly displayed the regions sorted from highest to lowest average charges.

Test 2
Arrange:A dataset of InsuranceRecord objects was created where the southern region had higher charges.
Act:A Task15 object was created with this dataset and the sort_regions_by_avg_charges() method was called.
Assert:The program prints "Regions sorted by avereage charegs shows South, Northeast, Northwest, confirming the regions.

Task 17
Feature: Compare average age of smokers between southern and northern regions
Test 1
Arrange: A dataset of InsuranceRecord objects was created with region and smoker information.
Act:  A Task17 object was created with this dataset and the compare_smoking_by_region() method was called.
Assert: The output correctly displayed the average age for southern and northern smokers and indicated which group was older or if they were the same.
---------
Task 19
Feature: Compare average number of children and average age between southern and northern regions
Test 1
Arrange: A dataset of InsuranceRecord objects was created with region, age, and children information.
Act: A Task19 object was created with this dataset and the compare_children_by_region() method was called.
Assert: The output correctly displayed the average number of children and average age for both southern and northern regions.

Task 21 
Feature: Predict insurance charges based on number of children using linear regression
Test 1
Arrange: A dataset was loaded from the CSV file containing the number of children and corresponding charges.
Act: The slope, intercept, and Pearson correlation coefficient were calculated, and charges were predicted for a range of child counts.
Assert:The output correctly displayed the Pearson correlation coefficient and the predicted charges for each child count.
